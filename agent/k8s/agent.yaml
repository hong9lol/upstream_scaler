apiVersion: apps/v1
kind: DaemonSet
metadata:
    name: upstream-agent
    namespace: upstream-system
    labels:
        k8s-app: upstream-agent
spec:
    selector:
        matchLabels:
            name: upstream-agent
    template:
        metadata:
            labels:
                name: upstream-agent
        spec:
            serviceAccountName: permissive-account
            tolerations:
                - key: node-role.kubernetes.io/master
                  effect: NoSchedule
            containers:
                - name: agent
                  image: hong9lol/upstream-agent:0.1
                  #   image: localhost:5000/upstream-agent:0.1
                  imagePullPolicy: IfNotPresent
                  #   imagePullPolicy: Always
                  ports:
                      - name: http
                        containerPort: 3001
                        protocol: TCP
                  env:
                      - name: NODE_NAME
                        valueFrom:
                            fieldRef:
                                fieldPath: spec.nodeName
                  securityContext:
                      privileged: true
                  # hostPID: true
                  # hostNetwork: true

                  #       volumeMounts:
                  #           - mountPath: /work-dir-ssh
                  #             name: do-node-ssh
                  # volumes:
                  #     - hostPath:
                  #           path: /home/leejaehong/.ssh
                  #       name: do-node-ssh

                  #       # args:
                  #       #     - --mount=/host/proc/1/ns/mnt
                  #       #     - /bin/bash
                  #       securityContext:
                  #           privileged: true
                  #       stdin: true
                  #       stdinOnce: true
                  #       volumeMounts:
                  #           - mountPath: /host
                  #             name: host
                  # volumes:
                  #     - hostPath:
                  #           path: /
                  #           type: ''
                  #       name:
                  #           host

                  # volumeMounts:
                  #     - name: cgroup
                  #       mountPath: /cgroup
                  # volumeMounts:
                  #     - name: rootfs
                  #       mountPath: /
                  volumeMounts:
                      - name: sys
                        mountPath: /host/sys/fs/cgroup
                      - name: kubelet
                        mountPath: /var/lib/kubelet
                      - name: timelog
                        mountPath: /host/log

            # volumeMounts:
            #     - name: docker
            # mountPath: /var/lib/docker
            # terminationGracePeriodSeconds: 30
            volumes:
                - name: sys
                  hostPath:
                      path: /sys/fs/cgroup
                - name: kubelet
                  hostPath:
                      path: /var/lib/kubelet
                - name: timelog
                  hostPath:
                      path: /home/leejaehong/log
                      type: DirectoryOrCreate
            # - name: rootfs
            #   hostPath:
            #       path: /
            # - name: var-run
            #   hostPath:
            #       path: /var/run
            # - name: sys
            #   hostPath:
            #       path: /sys
            # - name: docker
            #   hostPath:
            #       path: /var/lib/docker
            # - name: cgroup
            #   hostPath:
            #       path: '/sys/fs/cgroup/system.slice'
            imagePullSecrets:
                - name: secret-jake
---
# apiVersion: v1
# kind: Service
# metadata:
#   name: upstream-agent
#   namespace: upstream-system
# spec:
#   type: NodePort
#   externalTrafficPolicy: Local
#   internalTrafficPolicy: Local
#   selector:
#     name: upstream-agent
#   ports:
#     - protocol: TCP
#       port: 3001
#       targetPort: 3001
#       nodePort: 30000
