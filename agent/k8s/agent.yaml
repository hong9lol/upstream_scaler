apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: upstream-agent
  namespace: upstream-system
  labels:
    k8s-app: upstream-agent
spec:
  selector:
    matchLabels:
      name: upstream-agent
  template:
    metadata:
      labels:
        name: upstream-agent
    spec:
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
        - name: agent
          image: hong9lol/upstream-agent:0.1
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3001
              protocol: TCP
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          # - name: cadvisor
          #   image: gcr.io/cadvisor/cadvisor:v0.39.3
          #   volumeMounts:
          #     - name: rootfs
          #       mountPath: /rootfs
          #       readOnly: true
          #     - name: var-run
          #       mountPath: /var/run
          #       readOnly: false
          #     - name: sys
          #       mountPath: /sys
          #       readOnly: true
          #     - name: docker
          #       mountPath: /var/lib/docker
          #       readOnly: true
          #   ports:
          #     - name: http
          #       containerPort: 11680
          #       protocol: TCP
          #   args:
          #     - --profiling
          #     - --housekeeping_interval=1s
          #     - --disable_metrics=accelerator,cpu_topology,disk,diskIO,memory_numa,network,tcp,udp,percpu,sched,process,hugetlb,referenced_memory,resctrl,cpuset
      terminationGracePeriodSeconds: 30
      volumes:
        - name: rootfs
          hostPath:
            path: /
        - name: var-run
          hostPath:
            path: /var/run
        - name: sys
          hostPath:
            path: /sys
        - name: docker
          hostPath:
            path: /var/lib/docker

---
# apiVersion: v1
# kind: Service
# metadata:
#   name: upstream-agent
#   namespace: upstream-system
# spec:
#   type: NodePort
#   externalTrafficPolicy: Local
#   internalTrafficPolicy: Local
#   selector:
#     name: upstream-agent
#   ports:
#     - protocol: TCP
#       port: 3001
#       targetPort: 3001
#       nodePort: 30000
